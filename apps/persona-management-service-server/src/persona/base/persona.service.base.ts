/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Persona as PrismaPersona } from "@prisma/client";

export class PersonaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PersonaCountArgs, "select">): Promise<number> {
    return this.prisma.persona.count(args);
  }

  async personas(args: Prisma.PersonaFindManyArgs): Promise<PrismaPersona[]> {
    return this.prisma.persona.findMany(args);
  }
  async persona(
    args: Prisma.PersonaFindUniqueArgs
  ): Promise<PrismaPersona | null> {
    return this.prisma.persona.findUnique(args);
  }
  async createPersona(args: Prisma.PersonaCreateArgs): Promise<PrismaPersona> {
    return this.prisma.persona.create(args);
  }
  async updatePersona(args: Prisma.PersonaUpdateArgs): Promise<PrismaPersona> {
    return this.prisma.persona.update(args);
  }
  async deletePersona(args: Prisma.PersonaDeleteArgs): Promise<PrismaPersona> {
    return this.prisma.persona.delete(args);
  }
}
